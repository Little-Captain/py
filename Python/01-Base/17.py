#!/usr/bin/env python

# 对象属性
# 类属性就是类对象所拥有的属性，它被所有类对象的实例对象所共有，
# 在内存中只存在一个副本，这个和C++中类的静态成员变量有点类似。
# 对于公有的类属性，在类外可以通过类对象和实例对象访问

# 如果需要在类外修改类属性，必须通过类对象去引用然后进行修改
# 如果通过实例对象去引用，会产生一个同名的实例属性，
# 这种方式修改的是实例属性，不会影响到类属性，
# 并且之后如果通过实例对象去引用该名称的属性，
# 实例属性会强制屏蔽掉类属性，即引用的是实例属性，
# 除非删除了该实例属性

class People(object):
    # 共有类属性
    name = 'Tom'
    # 私有类属性
    __age = 12
    def __init__(self):
        # 实例属性
        # 如果类属性和实例属性同名, 实例调用访问实例属性, 类调用访问类属性
        # 如果通过实例调用为类属性赋值, 会新建同名的实例属性, 而不会修改类属性
        self.name = 'xiaowang'
        self.age = 20


p = People()
# p.name = 'name'
print(p.name)
print(People.name)
# print(p.__age)
# print(People.__age)
